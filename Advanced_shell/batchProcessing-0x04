#!/bin/bash

# Configuration
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
API_BASE="https://pokeapi.co/api/v2/pokemon"
MAX_PARALLEL=3
OUTPUT_DIR="pokemon_data"
ERROR_LOG="pokemon_errors.log"

# Create directories and initialize logs
mkdir -p "$OUTPUT_DIR"
> "$ERROR_LOG"

# Function to fetch a single Pok√©mon
fetch_pokemon() {
    local pokemon=$1
    local output_file="${OUTPUT_DIR}/${pokemon}.json"
    
    if curl -s -f --max-time 30 "${API_BASE}/${pokemon}" -o "$output_file" 2>> "$ERROR_LOG"; then
        echo "‚úÖ $pokemon fetched successfully"
    else
        echo "‚ùå Failed to fetch $pokemon" >> "$ERROR_LOG"
        rm -f "$output_file"
        return 1
    fi
}

# Main execution
echo "Starting parallel Pok√©mon fetch at $(date)"
echo "======================================"
echo "Processing ${#POKEMON_LIST[@]} Pok√©mon with $MAX_PARALLEL parallel workers"

# Initialize variables
declare -A pid_to_pokemon
current_jobs=0

# Process each Pok√©mon
for pokemon in "${POKEMON_LIST[@]}"; do
    # Wait if we've reached max parallel jobs
    while [ $(jobs -r | wc -l) -ge $MAX_PARALLEL ]; do
        sleep 0.5
    done

    # Start the fetch in background
    fetch_pokemon "$pokemon" &
    pid=$!
    pid_to_pokemon[$pid]=$pokemon
    echo "üîÑ Started PID $pid for $pokemon"
done

# Wait for all remaining jobs to complete
echo "Waiting for all jobs to finish..."
for pid in "${!pid_to_pokemon[@]}"; do
    if wait $pid; then
        echo "‚úîÔ∏è ${pid_to_pokemon[$pid]} completed successfully"
    else
        echo "‚ö†Ô∏è  ${pid_to_pokemon[$pid]} failed (PID $pid)"
        # Kill any remaining processes if critical error occurs
        kill $(jobs -p) 2>/dev/null
        break
    fi
done

# Final summary
echo "======================================"
echo "Completed at $(date)"
success_count=$(ls -1 "$OUTPUT_DIR" 2>/dev/null | wc -l)
echo "Results: $success_count/${#POKEMON_LIST[@]} Pok√©mon fetched successfully"
[ -s "$ERROR_LOG" ] && echo "Errors logged in: $ERROR_LOG"
echo "Parallel fetch operation completed!"